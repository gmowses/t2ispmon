version: '3'
services:

  t2mysql:
    container_name: t2isp-mysql
    image: 'mysql:8'
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_DATABASE: npm
      MYSQL_USER: npmuser
      MYSQL_PASSWORD: npmuserpassword
      MYSQL_ROOT_PASSWORD: '@mysql@t2web#123'
    volumes:
      - /opt/docker/data/mysql:/var/lib/mysql
    networks:
      t2web-isp:
        ipv4_address: 10.20.30.2


  t2zbxserver:
    container_name: t2isp-zbxserver
    image: 'zabbix/zabbix-server-mysql:ubuntu-6.0-latest'
    restart: unless-stopped
    environment:
      DB_SERVER_HOST: "t2isp-mysql"
      MYSQL_DATABASE: "zabbix"
      MYSQL_USER: "zabbix"
      MYSQL_PASSWORD: "zabbixT2webAdmin"
      MYSQL_ROOT_PASSWORD: "@mysql@t2web#123"
      ZBX_STARTPOLLERS: 100
      ZBX_STARTPINGERS: 110
      ZBX_STARTPOLLERSUNREACHABLE: 20
      ZBX_CACHESIZE: 2G
      ZBX_VALUECACHESIZE: 1G
      ZBX_TRENDCACHESIZE: 512M
      ZBX_HISTORYCACHESIZE: 256M
      ZBX_HISTORYINDEXCACHESIZE: 128M
      ZBX_VMWARECACHESIZE: 128M
      ZBX_TIMEOUT: 30
      ZBX_MAXHOUSEKEEPERDELETE: 30000
      ZBX_SERVER_NAME: "ZBX-T2_ISP"
      ZBX_TRAPPERIMEOUT: 300
      ZBX_ENABLE_SNMP_TRAPS: true
    depends_on:
      - t2mysql
    volumes:
      - /opt/docker/data/zabbix/server/alertscripts:/usr/lib/zabbix/alertscripts 
      - /opt/docker/data/zabbix/server/externalscripts:/usr/lib/zabbix/externalscripts 
    networks:
      t2web-isp:
        ipv4_address: 10.20.30.3


  t2zbxfront:
    container_name: t2isp-zbxfront
    image: 'zabbix/zabbix-web-apache-mysql:ubuntu-6.0-latest'
    restart: unless-stopped
    environment:
      DB_SERVER_HOST: "t2isp-mysql"
      MYSQL_DATABASE: "zabbix"
      MYSQL_USER: "zabbix"
      MYSQL_PASSWORD: "zabbixT2webAdmin"
      MYSQL_ROOT_PASSWORD: "@mysql@t2web#123"
      PHP_TZ: "America/Sao_Paulo"
      ZBX_UPLOADMAXFILESIZE: 50M
      ZBX_SERVER_NAME: "ZBX-T2WEB_ISP"
      VIRTUAL_HOST: "zbxisp.t2web.com.br"
      ZBX_SERVER_HOST: "10.20.30.3"
    depends_on:
      - t2mysql
    networks:
      t2web-isp:
        ipv4_address: 10.20.30.4


  t2grafana:
    container_name: t2isp-grafana
    image: 'grafana/grafana:10.0.0-ubuntu'
    restart: unless-stopped
    environment:
      GF_INSTALL_PLUGINS: "alexanderzobnin-zabbix-app,grafana-singlestat-panel,yesoreyeram-boomtheme-panel,grafana-clock-panel,grafana-piechart-panel"
    user: '0'
    volumes:
      - /opt/docker/data/grafana:/var/lib/grafana
    networks:
      t2web-isp:
        ipv4_address: 10.20.30.5


  t2dns:
    container_name: t2isp-bind9
    image: 'labbsr0x/dns-bind9'
    restart: unless-stopped
    expose:
      - '53'
    ports:
    - "53:53/udp"
    - "53:53/tcp"
    volumes:
      -  /opt/docker/data/bind9/data:/data
    networks:
      t2web-isp:
        ipv4_address: 10.20.30.6


  t2proxymanager:
    container_name: t2isp-proxymanager
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    environment:
      DB_MYSQL_HOST: 10.20.30.2
      DB_MYSQL_PORT: 3306
      DB_MYSQL_USER: "npmuser"
      DB_MYSQL_PASSWORD: "npmuserpassword"
      DB_MYSQL_NAME: "npm"
    ports:
      - "80:80"
      - "81:81"
      - "443:443"
    volumes:
      - /opt/docker/data/nginxproxymanager/data:/data
      - /opt/docker/data/nginxproxymanager/letsencrypt:/etc/letsencrypt
    networks:
      t2web-isp:
        ipv4_address: 10.20.30.7

  portainer:
    image: portainer/portainer-ce:latest
    container_name: t2isp-portainer
    restart: unless-stopped
    ports:
      - "9001:9001"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/docker/data/portainer/data:/data
    networks:
      t2web-isp:
        ipv4_address: 10.20.30.8

  loki-logs:
    container_name: t2isp-lokilogs
    image: grafana/loki:2.9.0
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      t2web-isp:
        ipv4_address: 10.20.30.9

  promtail:
    container_name: t2isp-promtail
    image: grafana/promtail:2.9.0
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml
    networks:
      t2web-isp:
        ipv4_address: 10.20.30.10

  cronicle:
    image: soulteary/cronicle:0.9.39
    restart: always
    hostname: cronicle
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /opt/docker/data/cronicle/data/data:/opt/cronicle/data
      - /opt/docker/data/cronicle/data/logs:/opt/cronicle/logs
      - /opt/docker/data/cronicle/data/plugins:/opt/cronicle/plugins
    extra_hosts:
      - "cronicle.lab.io:0.0.0.0"
    environment:
      - TZ=America/Sao_Paulo
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:3012/api/app/ping || exit 1"]
      interval: 5s
      timeout: 1s
      retries: 3
    logging:
        driver: "json-file"
        options:
            max-size: "10m"
    networks:
      t2web-isp:
        ipv4_address: 10.20.30.11

networks:
  t2web-isp:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.20.30.0/24
          gateway: 10.20.30.1
